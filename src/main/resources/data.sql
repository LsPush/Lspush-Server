-- user table
insert into user(username, phone, country, password, avatar, description) values('One', '13108901231', 'CN', 'abc123456', 'http://101.201.65.221/api/resource/download/ele.png', '测试用户');
insert into user(username, phone, country, password, avatar, description) values('Two', '12345678901', 'CN', 'pwd123456', 'http://101.201.65.221/api/resource/download/jm.png', '测试用户');
insert into user(username, phone, country, password, avatar, description) values('Three', '14365498710', 'CN', 'cde123456', 'http://101.201.65.221/api/resource/download/ele.png', '测试用户');

-- collection table
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('https://code.tutsplus.com/articles/scrolling-techniques-for-material-design--cms-24435', 'Scrolling Techniques for Material Design', 'IntroductionLast year, Google introduced Material Design and it became clear that motion and animation would be two of the most eye-catch...', 'https://cms-assets.tutsplus.com/uploads/users/425/posts/24435/image/scrollable-regions-within-android-app.png', 'Material Design|Android|scrolling techniques', 1, '2017-02-04 08:23:11', '2017-02-04 08:23:11');
insert into collection(url, title, description, tags, user_id, create_date, update_date) values('http://www.materialdoc.com/scrolling-techniques/', 'Scrolling techniques', 'From Google Material Design documentation:      When designing scrolling behavior, app bars contain four main regions (referred to as blo...', 'Material Design|Android|scrolling techniques', 1, '2017-02-04 08:41:13', '2017-02-04 08:41:13');
insert into collection(url, title, tags, user_id, create_date, update_date) values('https://github.com/wangwang4git/just-do/blob/197bc5ad559343643f04fb86708925fdbe1d3300/AndroidLeak/%E6%89%8BQ%E4%B8%AD%E7%9A%84%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F%E6%A3%80%E6%B5%8B%E6%A8%A1%E5%9D%97.md', '手Q中的内存泄漏检测模块', '内存泄漏检测', 2, '2017-02-04 08:51:30', '2017-02-04 08:51:30');
insert into collection(url, title, tags, user_id, create_date, update_date) values('https://github.com/spring-projects/spring-boot/blob/10ca22082b031b6edc5e6d6def05da76425924f9/spring-boot-docs/src/main/asciidoc/howto.adoc', 'Spring Boot ‘How-to’ guides', 'Spring Boot', 1, '2017-02-04 09:03:12', '2017-02-04 09:03:12');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('https://github.com/nisrulz/android-tips-tricks', 'nisrulz/android-tips-tricks', 'android-tips-tricks - :ballot_box_with_check: [Cheatsheet] Tips and tricks for Android Development', 'https://raw.githubusercontent.com/nisrulz/android-tips-tricks/develop/.github/img/github_banner.png', 'Tips and tricks|Android', 2, '2017-02-04 09:24:19', '2017-02-04 09:24:19');
insert into collection(url, title, description, tags, user_id, create_date, update_date) values('http://stackoverflow.com/questions/7910734/gsonbuilder-setdateformat-for-2011-10-26t202959-0700', 'GsonBuilder setDateFormat for \"2011-10-26T20:29:59-07:00\"', 'I''m getting a date/time in json as 2011-10-26T20:29:59-07:00. What''s the proper way to use gsonBuilder.setDateFormat to properly format this time?', 'DateFormat|Gson', 1, '2017-02-07 23:05:30', '2017-02-07 23:05:30');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0309/2567.html', 'android中xml tools属性详解 - 泡在网上的日子', '安卓开发中，在写布局代码的时候，ide可以看到布局的预览效果。 但是有些效果则必须在运行之后才能看见，比如这种情况：TextView在xml中没有设置任何字符，而是在activity中设置了text。因此为了在ide中预览效果，你必须在xml中为TextView控件设置android:te', 'http://www.jcodecraeer.com/uploads/20150309/1425885466897212.png', 'xml tools|Android', 2, '2017-02-07 23:21:16', '2017-02-07 23:21:16');
insert into collection(url, title, description, tags, user_id, create_date, update_date) values('http://blog.danlew.net/2016/07/19/a-deep-dive-into-android-view-constructors/', 'A deep dive into Android View constructors', 'I often see confusion around Android View constructors. Why are there four of them? What does each parameter do? Which constructors do I need to implement? tl;dr If you just want quick, practical a...', 'view constructors|Android', 1, '2017-02-08 13:43:32', '2017-02-08 13:43:32');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('http://johnpetitto.com/padded-cell', 'A Padded Cell - Dealing with RecyclerView Measurements · John Petitto', 'In Android, a layout is composed from a hierarchy of views. Each view has a parent (up until the root view) and a ViewGroup can have child views. When a layout gets inflated at runtime, the framewo...', 'http://johnpetitto.com/assets/clip-padding-initial.png', 'RecyclerView Padded Cell|Android', 2, '2017-02-08 19:27:51', '2017-02-08 19:27:51');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('https://github.com/DroidKaigi/conference-app-2017', 'DroidKaigi/conference-app-2017', 'conference-app-2017 - The Official Conference App for DroidKaigi 2017 Tokyo', 'https://github.com/DroidKaigi/conference-app-2017/raw/master/doc/screenshot_sessions.png', 'DroidKaigi 2017 Tokyo|Android', 2, '2017-02-09 08:16:13', '2017-02-09 08:16:13');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('https://github.com/nolia/Noodle', 'nolia/Noodle', 'Noodle - Simple object storage for Android', 'https://github.com/nolia/Noodle/raw/master/logo.png', 'object storage|Android Library', 2, '2017-02-09 09:21:21', '2017-02-09 09:21:21');
insert into collection(url, title, description, tags, user_id, create_date, update_date) values('http://blog.csdn.net/qing666888/article/details/51622762', 'Genymotion 解决虚拟镜像下载速度特别慢的问题 - qing666888的专栏 - 博客频道 - CSDN.NET', 'Genymotion也算是个android的模拟程序了，Add new device后下载速度太慢了，容易失败解决方法有二：1、设置HTTP代理，在Setting->Network，自己设置HTTP proxy和Port， 2、找到下载链接，直接用迅雷拖下来     遇到下载失败，win+R打开运行框，输入 %appdata%， 再点击上', 'genymotion', 2, '2017-03-04 10:08:10', '2017-03-04 10:08:10');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('https://blog.autsoft.hu/discovering-the-android-api-part-1/', 'Discovering Android API', 'This blog post contains several not well known Andorid APIs with code samples and use case examples.', 'https://blog.autsoft.hu/content/images/2017/01/menu_part1.png', 'tip|Android API', 2, '2017-03-04 10:11:12', '2017-03-04 10:11:12');
insert into collection(url, title, description, tags, user_id, create_date, update_date) values('http://colobu.com/2016/07/02/bloom-filter-for-scala/', '[译]JVM上最快的Bloom filter实现', '英文原始出处: Bloom filter for Scala, the fastest for JVM\n本文介绍的是我用Scala实现的Bloom filter。 源代码在github上。依照性能测试结果，它是JVM上的最快的Bloom filter实现。零分配(Zero-allocation)和高度优化的代码。 无内存限制，所以没有包含元素的数量限制和可控的误报率(false positive', 'Bloom filter', 1, '2017-03-04 10:14:11', '2017-03-04 10:14:11');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('http://mp.weixin.qq.com/s?__biz=MzA3MDExNzcyNA==&mid=2650392165&idx=1&sn=f00f76c64cd3bccff6710947f20c7504&scene=0', '怎么快速找到：附近的人', '每周日下午，微信simplemain，老王又如约跟大家聊技术干货了。', 'http://mmbiz.qpic.cn/mmbiz/YWnUbMibWJE1Jpfb5Ky8V5cX2ywkZg8SgPkZ4VPv0icK6jsXTCyK1J1wFgsQer15iacQzNELcnaExzSZg7ricBMIyw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1', '快速找到附近的人', 1, '2017-03-04 10:24:42', '2017-03-04 10:24:42');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('http://pingguohe.net/2016/03/21/Dynimac-write-infomation-into-apk.html', '一种动态为apk写入信息的方案', '背景我们在日常使用应用可能会遇到以下场景。场景1：用户浏览h5页面时看到一个页面，下载安装app后启动会来到首页而不是用户之前浏览的页面，造成使用场景的割裂。', 'http://pingguohe.net/images/2016/3/11/header.png', 'Deferred Deeplink', 1, '2017-03-04 10:34:01', '2017-03-04 10:34:01');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('http://blog.spinytech.com/2016/12/28/android_modularization/', 'Android架构思考(模块化、多进程) | Spiny', '关于模块化(组件化)这个问题，我想每个开发者可能都认真的思考过。随着项目的开发，业务不断壮大，业务模块越来越多，各个模块间相互引用，耦合越来越严重，同时', 'http://ogsbxb571.bkt.clouddn.com/Router%E6%97%B6%E5%BA%8F%E5%9B%BE.png', 'Android架构|模块化', 1, '2017-03-04 10:39:11', '2017-03-04 10:39:11');
insert into collection(url, title, description, tags, user_id, create_date, update_date) values('http://iluhcm.com/2016/01/08/scan-qr-code-and-recognize-it-from-picture-fastly-using-zxing/', 'zxing扫描二维码和识别图片二维码及其优化策略', '二维码介绍Android中用于二维码相关的库比较少，并且大多数已经不再维护（具体可见https://android-arsenal.com/tag/81）。其中最常用的是zxing和zbar。\nzxing项目是谷歌推出的用来识别多种格式条形码的开源项目，项目地址为https://github.com/zxing/zxing，zxing有多个人在维护，覆盖主流编程语言，也是目前还在维护的较受欢迎的二', 'zxing', 1, '2017-03-04 10:42:24', '2017-03-04 10:42:24');
insert into collection(url, title, description, tags, user_id, create_date, update_date) values('http://stackoverflow.com/questions/33139849/retrofit-2-0-post-method-with-body-is-string?answertab=votes#tab-top', 'Retrofit 2.0 POST method with body is String', 'This question may have been asked before but with new version 2.0 I did not find any correct answer yet.\n\nMy problem as below:\n\npublic interface  AuthenticationAPI {\n\n    @POST(\"token\")\n    Call&lt;', 'retrofit string body', 1, '2017-03-04 12:43:17', '2017-03-04 12:43:17');
insert into collection(url, title, description, tags, user_id, create_date, update_date) values('https://github.com/liuxinyu95/AlgoXY', 'liuxinyu95/AlgoXY', 'AlgoXY - Book of Elementary Algorithms and Data structures', 'Elementary Algorithms', 1, '2017-03-04 12:48:32', '2017-03-04 12:48:32');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('http://blog.csdn.net/tencent_bugly/article/details/51769566', '【腾讯bugly干货分享】Android自绘动画实现与优化实战——以Tencent OS录音机波形动 - 腾讯Bugly的专栏 - 博客频道 - CSDN.NET', '本文来自于腾讯bugly社区，原文地址为：http://bugly.qq.com/bbs/forum.php?mod=viewthread&tid=1180前言我们所熟知的，Android 的图形绘制主要是基于 View 这个类实现。 每个 View 的绘制都需要经过 onMeasure、onLayout、onDraw 三步曲，分别对应到测量大小、布局、绘制。Android 系统为了简化线程...', 'http://i.imgur.com/BTG03XF.gif', 'Android自绘动画', 1, '2017-03-04 12:55:41', '2017-03-04 12:55:41');

insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('https://www.bignerdranch.com/blog/the-rxjava-repository-pattern/', 'The RxJava Repository Pattern', 'Learn about the Repository pattern and its pragmatic way of fitting RxJava into the Android lifecycle so that the UI and data layer of your app can stay in sync with one another.', 'https://www.bignerdranch.com/uploads/versions/stockwatcher-data-layer---x----355-398x---.png', 'RxJava Repository Pattern|Android', 1, '2017-03-11 23:11:11', '2017-03-11 23:11:11');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('http://blog.csdn.net/v_july_v/article/details/60618425', 'GAN之父在NIPS 2016上做的报告：两个竞争网络的对抗（含译文下载） - 结构之法 算法之道 - 博客频道 - CSDN.NET', 'GAN之父在NIPS 2016上做的报告：两个竞争网络的对抗（含译文全文PDF下载）作者：Ian Goodfellow翻译：七月在线DL翻译组译者：范诗剑 汪识瀚 李亚楠审校：管博士 寒小阳 加号责编：翟惠良声明：本译文仅供学习交流，由于译者水平有限，有任何翻译不当之处，敬请批评留言指正，我们定改进。转载请注明出处。**译文全文PDF下载**：[attach]2116[/attach]小编说：20', 'http://img.blog.csdn.net/20170306234018844', 'GAN|竞争网络对抗', 1, '2017-03-11 23:14:15', '2017-03-11 23:14:15');
insert into collection(url, title, description, tags, user_id, create_date, update_date) values('https://daimajia.com/2017/02/25/you-need-a-goal/', '成为一个有目标的学习者 | 代码家', '我一个好朋友，他在一家国内较大借贷平台做前端工程师，每天五点起床，早早的到公司，开始读一些经典的前端类的书籍。起的这么早的动力是觉得自己还没能够掌握前端的很多细节，真正在做开发的时候，依然会忘记之前看到过的东西，总是下意识的告诉自己：『可能我还处在入门水平』。', '忠告|有目标的学习者', 2, '2017-03-11 23:17:12', '2017-03-11 23:17:12');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('http://yifeng.studio/2017/03/08/android-several-layout-skills/', 'Android 日常开发中，两个非常实用的布局技巧', 'Android 布局容器、常用控件和属性，相信每个开发者都能倒背如流，开发排版 layout 时也能适当取舍。但是，本文中介绍的这两个常见的设计场景，其特殊的实现技巧可能你真的不曾用过。', 'http://ocq7gtgqu.bkt.clouddn.com/1488931003.jpg', 'Android 布局技巧', 1, '2017-03-11 23:20:14', '2017-03-11 23:20:14');

insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('http://mp.weixin.qq.com/s?__biz=MzAxNjI3MDkzOQ==&mid=2654472687&idx=1&sn=3a8c101fab3b032d043c6ea0922c76f2&chksm=803bfadbb74c73cdba0c0dbc73fd5a9a50f7e601b70f61b6c83a8bda3880ed5737cf84d3e7e3&mpshare=1&scene=23&srcid=03133mGexnvrnG0ht6esRXeP', 'Android 技巧-Debug 判断不再用 BuildConfig', '功能介绍 专注于 Android 开源分享、源码解析、框架设计、内推，由 Trinea 创建并维护，官网：www.codekk.com', 'http://mmbiz.qpic.cn/mmbiz_jpg/KfDGLcEiauQiaVfzmxlhibwy0OZQfRCCx18obstqQRJJuo6GVlzy4scBG6MiaicBhqOLJ90tY8ozY5cianfW0X9cqHBA/640?wx_fmt=jpeg&tp=webp&wxfrom=5&wx_lazy=1', 'Android Debug 判断', 1, '2017-03-15 21:38:19', '2017-03-15 21:38:19');
insert into collection(url, title, tags, user_id, create_date, update_date) values('https://zhuanlan.zhihu.com/p/25672455', '由 CIA 带来的 Git 使用技巧 - 知乎专栏', 'Git 技巧', 1, '2017-03-15 21:41:41', '2017-03-15 21:41:41');
insert into collection(url, title, description, image, tags, user_id, create_date, update_date) values('https://github.com/yarolegovich/DiscreteScrollView', 'yarolegovich/DiscreteScrollView', 'DiscreteScrollView - Scrollable list of items, where current item is centered and can be changed using swipes', 'https://github.com/yarolegovich/DiscreteScrollView/raw/master/images/cards_shop.gif', 'RecyclerView|scrollable list with transformation', 1, '2017-03-15 21:44:21', '2017-03-15 21:44:21');

-- favor table
insert into favor(user_id, col_id, update_date) values(1, 2, "2017-02-04 08:50:12");
insert into favor(user_id, col_id, update_date) values(2, 3, "2017-02-04 08:53:29");
insert into favor(user_id, col_id, update_date) values(1, 5, "2017-02-04 09:30:59");
insert into favor(user_id, col_id, update_date) values(2, 5, "2017-02-04 09:31:59");
insert into favor(user_id, col_id, update_date) values(2, 6, "2017-02-07 23:22:18");
insert into favor(user_id, col_id, update_date) values(2, 7, "2017-02-07 23:33:07");
insert into favor(user_id, col_id, update_date) values(1, 9, "2017-03-04 08:50:12");
insert into favor(user_id, col_id, update_date) values(2, 11, "2017-03-05 17:53:29");
insert into favor(user_id, col_id, update_date) values(1, 11, "2017-03-06 05:29:53");
insert into favor(user_id, col_id, update_date) values(1, 15, "2017-03-06 14:30:16");
insert into favor(user_id, col_id, update_date) values(2, 17, "2017-03-08 09:31:59");
insert into favor(user_id, col_id, update_date) values(1, 17, "2017-03-09 16:12:01");
insert into favor(user_id, col_id, update_date) values(2, 18, "2017-03-10 13:22:18");
insert into favor(user_id, col_id, update_date) values(2, 19, "2017-03-10 18:11:11");
insert into favor(user_id, col_id, update_date) values(2, 20, "2017-03-11 12:33:07");
insert into favor(user_id, col_id, update_date) values(2, 16, "2017-03-11 13:43:21");

insert into favor(user_id, col_id, update_date) values(2, 22, "2017-03-11 23:22:13");
insert into favor(user_id, col_id, update_date) values(1, 23, "2017-03-11 23:22:17");
insert into favor(user_id, col_id, update_date) values(2, 23, "2017-03-11 23:22:50");
insert into favor(user_id, col_id, update_date) values(2, 24, "2017-03-11 23:22:55");
insert into favor(user_id, col_id, update_date) values(1, 25, "2017-03-11 23:23:00");

insert into favor(user_id, col_id, update_date) values(1, 26, "2017-03-15 21:47:10");
insert into favor(user_id, col_id, update_date) values(2, 26, "2017-03-15 21:47:15");
insert into favor(user_id, col_id, update_date) values(2, 27, "2017-03-15 21:48:00");
insert into favor(user_id, col_id, update_date) values(1, 27, "2017-03-15 21:48:13");
insert into favor(user_id, col_id, update_date) values(1, 28, "2017-03-15 21:48:50");
insert into favor(user_id, col_id, update_date) values(2, 28, "2017-03-15 21:49:33");

-- comment table
insert into comment(user_id, col_id, update_date, comment) values(2, 5, "2017-02-04 09:32:33", "Good Tips!");
insert into comment(user_id, col_id, update_date, comment) values(1, 6, "2017-02-07 23:33:56", "Good Answer! 很不错，帮我解答了疑惑");
insert into comment(user_id, col_id, update_date, comment) values(3, 26, "2017-03-15 21:50:41", "挺新颖的，只是如果是工具类，需要引用到上下文感觉比较麻烦，也不方便；提供debug和release有个缺点是发布为library时as不能正确匹配source.jar，因为发布的时候source.jar文件名没有携带发布类型；传入式的配置感觉更好，每个模块提供一个LogFactory之类的，通过这个获取就会自动配置好是否输出日志，即统一管理，又能较小颗粒度控制。");

-- follow table
insert into follow(owner_id, following_id, update_date) values(1, 2, "2017-03-04 15:38:20");
insert into follow(owner_id, following_id, update_date) values(2, 1, "2017-03-04 15:39:00");
insert into follow(owner_id, following_id, update_date) values(3, 1, "2017-03-04 15:39:00");